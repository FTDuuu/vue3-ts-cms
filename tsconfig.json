{
  "compilerOptions": {
    //目标代码(ts->js(es5/6/7))
    "target": "esnext",//esnext一般是es6以下的版本
    //目标代码需要使用的模块化方案(commonjs require/module.exports/es module import/export)
    "module": "esnext",
    //一些严格的检查
    "strict": true,
    //对jsx进行怎么样的处理
    "jsx": "preserve",
    //按照Node的方式去解析模块 import "/index.node"
    "moduleResolution": "node",
    //跳过一些库的类型检测（axios->类型 /lodash->@types/lodash/其他第三方）
    //import {} from 'axios'
    "skipLibCheck": true,
    //es module和commonjs一起使用
    //export default和commonjs
    "esModuleInterop": true,
    "allowSyntheticDefaultImports": true,
    "forceConsistentCasingInFileNames": true,
    "useDefineForClassFields": true,
    //要不要生成映射文件(ts->js)
    "sourceMap": true,
    //文件路径解析时，基本url
    "baseUrl": ".",
    //指定具体要解析使用的类型
    "types": ["webpack-env"],
    //路径解析 匹配路径
    "paths": {
      "@/*": ["src/*"],
      "components/*":["src/components/*"]
    },
    //可以指定在项目中可以使用哪里库的类型
    "lib": ["esnext", "dom", "dom.iterable", "scripthost"]
  },
  "include": [
    "src/**/*.ts",
    "src/**/*.tsx",
    "src/**/*.vue",
    "tests/**/*.ts",
    "tests/**/*.tsx"
  ],
  "exclude": ["node_modules"]
}
